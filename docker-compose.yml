version: "3"

services:
  rote_mongo_primary:
    image: mongo:5
    restart: always
    expose:
      - 27017
    #公开数据库端口，以便单独访问
    ports:
      - 27017:27017
    volumes:
      - ./mongodb/primary:/data/db
    networks:
      - backendNetwork
    entrypoint: ["/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0"]

  rote_mongo_secondary:
    image: mongo:5
    restart: always
    volumes:
      - ./mongodb/secondary:/data/db
    entrypoint: ["/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0"]
    networks:
      - backendNetwork

  mongo-setup:
    image: mongo:5
    restart: on-failure

    entrypoint:
      - /bin/bash
      - -c
      - |
        mongo --host rote_mongo_primary:27017 --eval 'rs.status().ok ? null : rs.initiate({
          _id: "rs0",
          members: [
            {_id: 0, host: "rote_mongo_primary:27017", priority: 2},
            {_id: 1, host: "rote_mongo_secondary:27017", priority: 1}
          ]
        })' && mongo --host rote_mongo_primary:27017 --eval 'while (! db.hello().isWritablePrimary ) sleep(1000); db = db.getSiblingDB("Rote"); db.getCollectionNames().includes("Rote") ? 0 : db.createCollection("Rote");'

    depends_on:
      - rote_mongo_primary
      - rote_mongo_secondary
    networks:
      - backendNetwork

  node:
    image: node:18
    working_dir: /root/rote_node
    environment:

    volumes:
      - ./backend:/root/rote_node
    expose:
      - "3000"
    #公开api端口，以便外网单独访问
    ports:
      - "3000:3000"
    command: sh -c "npm install && npx prisma db push && npx prisma generate && npm start"
    restart: always
    depends_on:
      - rote_mongo_primary
      - rote_mongo_secondary
      - mongo-setup
    networks:
      - backendNetwork

networks:
  backendNetwork:
    driver: bridge
