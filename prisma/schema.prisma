generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  email        String         @unique
  username     String         @unique
  passwordhash String
  salt         String
  nickname     String?
  usersetting  Usersetting?
  rotes        Rote[]
  attachments  Attachment[]
  userreaction UserReaction[]
}

model Usersetting {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  user     User    @relation(fields: [userid], references: [id])
  userid   String  @unique @db.ObjectId
  darkmode Boolean @default(false)
}

model Rote {
  id              String            @id @default(auto()) @map("_id") @db.ObjectId
  title           String
  type            String?           @default("Rote")
  content         String?           @default("")
  published       Boolean           @default(false)
  author          User              @relation(fields: [authorid], references: [id])
  authorid        String            @db.ObjectId
  attachments     Attachment[]
  userreaction    UserReaction[]
  visitorReaction VisitorReaction[]
}

model Attachment {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  url    String
  user   User   @relation(fields: [userid], references: [id])
  userid String @db.ObjectId
  rote   Rote   @relation(fields: [roteid], references: [id])
  roteid String @db.ObjectId
}

model UserReaction {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  type   String
  user   User   @relation(fields: [userid], references: [id])
  userid String @db.ObjectId
  rote   Rote   @relation(fields: [roteid], references: [id])
  roteid String @db.ObjectId
}

model VisitorReaction {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  type   String
  rote   Rote   @relation(fields: [roteid], references: [id])
  roteid String @db.ObjectId
}
